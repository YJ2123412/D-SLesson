day13

표준입력( 콘솔장치 - 키보드)
키보드로 입력 ->입력버퍼(저장장치) ->프로그램 메모리

표준출력(콘솔장치-화면)
프로그램 메모리 -> 출력버퍼 -> 화면(모니터) 

한글 인코딩
유니코딩 (UTF-8, UTF-16..) 중에 UTF-8 사용(한글(다국어)3byte)
<->윈도우 터미널(MS949=CP949)는 EUC-KR(ANSI) 국산 인코딩 방식을 따름(한글 2byte)

돌아오기 chcp949

문자를 하나씩 읽는 것보다 []에 넣어서 읽는 것이 더 빠르다
시간세기
long start = System.currentTimeMillis(); //1000분의 1초
실행메소드
long end = System.currentTimeMillis();
System.out.println(String.format("실행 소요 시간: %,d ms",(end-start)));

선언 코드 줄이기
BufferedReader br = new BufferedReader(new FileReader(filePath));




Split 메소드
String str= "010-5555-1223"
String[] moNum = str.split("-")
String ret1 = mobNum[0];
String ret2 = mobNum[1];
String ret3 = mobNum[2];


list 의 출력 -> [A,B,C] ->[]와 ,가 필수적임
없이 출력을 원하면
 for(Score t:makeList()){
            System.out.println(t);}  ->임의의 변수를 넣어서 iterator로 돌리고 출력


 //Scanner 클래스 : 한줄씩 읽어오는 nextLine()메소드, 구분기호로 분리해서 읽어오는 방법
        try( Scanner fc = new Scanner(new FileReader(filePath))){
            

            fc.useDelimiter(",|\\n");       //구분기호(delimiter)를 , 또는 엔터

            // 파일의 끝까지 반복
            while (fc.hasNext()) {                  //구분기호로 분리된 데이터가 있으면
                String token = fc.next();           //next 메소드로 가져오기
                System.out.println(token.trim());
                count++;
            }

분리된 것들-> 토큰이라 부름..
.trim() 공백제거

hasNext()  ()안의 것을 가지고 있으면 true.. 가지고 올 것이 없으면 false


