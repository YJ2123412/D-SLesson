-for문대신 forEach


- DOM: 문서객체모델. 웹문서는 태그로 구성됨, 그 태그들은 서로 부모-자식관계가 있음. 이것은 트리구조로 설명될 수 있음
1. div id ='kpop' 인 태그의 자식 요소들을 접근하는 '속성'들  -> 예제를 많이 다뤄봐야 이해가 됨

console.log('1.childNodes')
console.log(kpop.childNodes)
console.log('2.children')
console.log(kpop.children)
console.log('3.첫번째 자식')
console.log(kpop.firstChild)
console.log('4.첫번째 자식요소')
console.log(kpop.firstElementChild)
console.log('5.마지막 자식')
console.log(kpop.lastChild)
console.log('6.마지막자식요소')
const child1 = kpop.lastElementChild
console.log('7.마지막 자식요소의 컨텐츠')
console.log(child1.innerHTML)
console.log(kpop.lastElementChild.innerHTML)
console.log('8.첫번째 자식요소의 컨텐츠')
console.log(kpop.firstElementChild.innerHTML)
console.log('9.첫번째 자식의 형제 요소')
console.log(kpop.firstElementChild.nextElementSibling)
console.log(kpop.firstElementChild.nextElementSibling.innerHTML)
console.log('10.마지막 자식의 형제 요소')
console.log(kpop.lastElementChild.nextElementSibling)  //다음형제
console.log(kpop.lastElementChild.previousElementSibling)  //앞에 나온 형제

2. dom 메소드: html 요소를 가져오는 '매소드'
    // 1) getElementById 대신 css에서 사용했던 선택자로 요소 가져오기 
    //-> 2) querySelector 한개만 가져오는 메소드/ 3)querySelectorAll은 여러개 가져오는 메소드
    //4) 요소를 만들어주는 메소드: createElement
    //5) 요소를 추가해주는메소드 : appendChild
    //6) 요소를 여러개 가져오는 메소드:getElementsByTagName, getElementsByClassName



























